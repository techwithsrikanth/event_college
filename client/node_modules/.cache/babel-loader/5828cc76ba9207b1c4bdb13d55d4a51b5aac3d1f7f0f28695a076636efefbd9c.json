{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srika\\\\OneDrive\\\\Desktop\\\\fest_website\\\\client\\\\src\\\\components\\\\eventslist\\\\Eventslist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './eventslist.css';\nimport { request } from '../../util/fetchAPI2'; // Import the request function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n\n  // Function to handle payment\n  const handlePayment = async regnfees => {\n    try {\n      const response = await fetch('/api3/payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          regnfees\n        }) // Send registration fees to the server\n      });\n\n      // Handle the response as needed\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await request('/api3/events', 'GET');\n        if (Array.isArray(response)) {\n          setEvents(response);\n        } else {\n          console.error('Invalid response format:', response);\n        }\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events-list-container\",\n    children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: event.eventType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Event Name: \", event.eventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"College Name: \", event.collegeName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/${event.posterimg}`,\n        alt: \"Poster\",\n        className: \"event-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", event.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cash Prize: \", event.cashPrize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Registeration Fees: \", event.regnfees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Website: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: event.website,\n          children: event.website\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay and Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, event._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventsList;\nexport default EventsList;\nvar _c;\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"names":["React","useState","useEffect","request","jsxDEV","_jsxDEV","EventsList","_s","events","setEvents","handlePayment","regnfees","response","fetch","method","headers","body","JSON","stringify","error","console","message","fetchEvents","Array","isArray","className","children","map","event","eventType","fileName","_jsxFileName","lineNumber","columnNumber","eventName","collegeName","src","posterimg","alt","description","cashPrize","href","website","_id","_c","$RefreshReg$"],"sources":["C:/Users/srika/OneDrive/Desktop/fest_website/client/src/components/eventslist/Eventslist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './eventslist.css';\r\nimport { request } from '../../util/fetchAPI2'; // Import the request function\r\n\r\nconst EventsList = () => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  // Function to handle payment\r\n  const handlePayment = async (regnfees) => {\r\n    try {\r\n      const response = await fetch('/api3/payment', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ regnfees }), // Send registration fees to the server\r\n      });\r\n\r\n      // Handle the response as needed\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await request('/api3/events', 'GET');\r\n        if (Array.isArray(response)) {\r\n          setEvents(response);\r\n        } else {\r\n          console.error('Invalid response format:', response);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"events-list-container\">\r\n      {events.map((event) => (\r\n        <div key={event._id} className=\"event-item\">\r\n          <h2>{event.eventType}</h2>\r\n          <p>Event Name: {event.eventName}</p>\r\n          <p>College Name: {event.collegeName}</p>\r\n          <img src={`http://localhost:5000/${event.posterimg}`} alt=\"Poster\" className=\"event-poster\" />\r\n          <p>Description: {event.description}</p>\r\n          <p>Cash Prize: {event.cashPrize}</p>\r\n          <p>Registeration Fees: {event.regnfees}</p>\r\n          <p>Website: <a href={event.website}>{event.website}</a></p>\r\n\r\n          <button>Pay and Register</button>\r\n\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}