{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srika\\\\OneDrive\\\\Desktop\\\\fest_website\\\\client\\\\src\\\\components\\\\eventslist\\\\Eventslist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './eventslist.css';\nimport { request } from '../../util/fetchAPI2'; // Import the request function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await request('/api3/events', 'GET');\n        if (Array.isArray(response)) {\n          setEvents(response);\n        } else {\n          console.error('Invalid response format:', response);\n        }\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events-list-container\",\n    children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: event.eventType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Event Name: \", event.eventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"College Name: \", event.collegeName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/${event.posterimg}`,\n        alt: \"Poster\",\n        className: \"event-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", event.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cash Prize: \", event.cashPrize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Registeration Fees: \", event.regnfees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Website: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: event.website,\n          children: event.website\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay and Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, event._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventsList;\nexport default EventsList;\nvar _c;\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"names":["React","useState","useEffect","request","jsxDEV","_jsxDEV","EventsList","_s","events","setEvents","fetchEvents","response","Array","isArray","console","error","message","className","children","map","event","eventType","fileName","_jsxFileName","lineNumber","columnNumber","eventName","collegeName","src","posterimg","alt","description","cashPrize","regnfees","href","website","_id","_c","$RefreshReg$"],"sources":["C:/Users/srika/OneDrive/Desktop/fest_website/client/src/components/eventslist/Eventslist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './eventslist.css';\r\nimport { request } from '../../util/fetchAPI2'; // Import the request function\r\n\r\nconst EventsList = () => {\r\n    const [events, setEvents] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchEvents = async () => {\r\n        try {\r\n          const response = await request('/api3/events', 'GET');\r\n          if (Array.isArray(response)) {\r\n            setEvents(response);\r\n          } else {\r\n            console.error('Invalid response format:', response);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error.message);\r\n        }\r\n      };\r\n  \r\n      fetchEvents();\r\n    }, []);\r\n\r\n  return (\r\n    <div className=\"events-list-container\">\r\n      {events.map((event) => (\r\n        <div key={event._id} className=\"event-item\">\r\n          <h2>{event.eventType}</h2>\r\n          <p>Event Name: {event.eventName}</p>\r\n          <p>College Name: {event.collegeName}</p>\r\n          <img src={`http://localhost:5000/${event.posterimg}`} alt=\"Poster\" className=\"event-poster\" />\r\n          <p>Description: {event.description}</p>\r\n          <p>Cash Prize: {event.cashPrize}</p>\r\n          <p>Registeration Fees: {event.regnfees}</p>\r\n          <p>Website: <a href={event.website}>{event.website}</a></p>\r\n\r\n          <button>Pay and Register</button>\r\n\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}