{"ast":null,"code":"// fetchAPI.js\nconst BASE_URL = \"http://localhost:8000\";\nexport const request = async (url, method, headers = {}, body = {}, isNotStringified = false) => {\n  let res;\n  let data;\n\n  // Log the data before making the request\n  console.log(\"Request Data:\", body);\n  try {\n    let requestOptions = {\n      method: method,\n      headers: {\n        ...headers,\n        'Content-Type': 'application/json' // Ensure content type is set\n      },\n      body: isNotStringified ? body : JSON.stringify(body) // Stringify the body if needed\n    };\n    res = await fetch(BASE_URL + url, requestOptions);\n    data = await res.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error.message);\n    return {\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["BASE_URL","request","url","method","headers","body","isNotStringified","res","data","console","log","requestOptions","JSON","stringify","fetch","json","error","message"],"sources":["C:/Users/srika/OneDrive/Desktop/fest_website/client/src/util/fetchAPI.js"],"sourcesContent":["// fetchAPI.js\r\nconst BASE_URL = \"http://localhost:8000\";\r\n\r\nexport const request = async (url, method, headers = {}, body = {}, isNotStringified = false) => {\r\n    let res;\r\n    let data;\r\n\r\n    // Log the data before making the request\r\n    console.log(\"Request Data:\", body);\r\n\r\n    try {\r\n        let requestOptions = {\r\n            method: method,\r\n            headers: {\r\n                ...headers,\r\n                'Content-Type': 'application/json' // Ensure content type is set\r\n            },\r\n            body: isNotStringified ? body : JSON.stringify(body) // Stringify the body if needed\r\n        };\r\n\r\n        res = await fetch(BASE_URL + url, requestOptions);\r\n        data = await res.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error:', error.message);\r\n        return { error: error.message };\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAEC,gBAAgB,GAAG,KAAK,KAAK;EAC7F,IAAIC,GAAG;EACP,IAAIC,IAAI;;EAER;EACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,IAAI,CAAC;EAElC,IAAI;IACA,IAAIM,cAAc,GAAG;MACjBR,MAAM,EAAEA,MAAM;MACdC,OAAO,EAAE;QACL,GAAGA,OAAO;QACV,cAAc,EAAE,kBAAkB,CAAC;MACvC,CAAC;MACDC,IAAI,EAAEC,gBAAgB,GAAGD,IAAI,GAAGO,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;IACzD,CAAC;IAEDE,GAAG,GAAG,MAAMO,KAAK,CAACd,QAAQ,GAAGE,GAAG,EAAES,cAAc,CAAC;IACjDH,IAAI,GAAG,MAAMD,GAAG,CAACQ,IAAI,CAAC,CAAC;IACvB,OAAOP,IAAI;EACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;IACtC,OAAO;MAAED,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACnC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}