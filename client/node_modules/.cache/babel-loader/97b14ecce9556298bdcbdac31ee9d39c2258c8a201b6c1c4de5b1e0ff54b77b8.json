{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srika\\\\OneDrive\\\\Desktop\\\\fest_website\\\\client\\\\src\\\\components\\\\createevent\\\\CreateEvent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './createevent.css'; // Your CSS file for CreateEvent component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateEvent = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    eventType: '',\n    eventName: '',\n    collegeName: 'Your College Name',\n    // Assuming a fixed college name\n    posterImage: null,\n    // For storing the image file using multer or file input\n    cashPrize: '',\n    description: '',\n    onlineOffline: '',\n    website: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleImageChange = e => {\n    // Logic to handle image upload using 'e.target.files[0]' when using file input\n    setFormData({\n      ...formData,\n      posterImage: e.target.files[0]\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle form submission - You can perform actions here with formData\n    console.log(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-event-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventType\",\n          children: \"Type of Event:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"eventType\",\n          name: \"eventType\",\n          value: formData.eventType,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventName\",\n          children: \"Event Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"eventName\",\n          name: \"eventName\",\n          value: formData.eventName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"College Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formData.collegeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"posterImage\",\n          children: \"Poster Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"posterImage\",\n          name: \"posterImage\",\n          onChange: handleImageChange,\n          accept: \"image/*\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateEvent, \"tfQjexAFpmyu5xXtypHmZvFycK4=\");\n_c = CreateEvent;\nexport default CreateEvent;\nvar _c;\n$RefreshReg$(_c, \"CreateEvent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateEvent","_s","formData","setFormData","eventType","eventName","collegeName","posterImage","cashPrize","description","onlineOffline","website","handleChange","e","name","value","target","handleImageChange","files","handleSubmit","preventDefault","console","log","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","accept","_c","$RefreshReg$"],"sources":["C:/Users/srika/OneDrive/Desktop/fest_website/client/src/components/createevent/CreateEvent.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './createevent.css'; // Your CSS file for CreateEvent component\r\n\r\nconst CreateEvent = () => {\r\n  const [formData, setFormData] = useState({\r\n    eventType: '',\r\n    eventName: '',\r\n    collegeName: 'Your College Name', // Assuming a fixed college name\r\n    posterImage: null, // For storing the image file using multer or file input\r\n    cashPrize: '',\r\n    description: '',\r\n    onlineOffline: '',\r\n    website: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    // Logic to handle image upload using 'e.target.files[0]' when using file input\r\n    setFormData({ ...formData, posterImage: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission - You can perform actions here with formData\r\n    console.log(formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-event-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"eventType\">Type of Event:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"eventType\"\r\n            name=\"eventType\"\r\n            value={formData.eventType}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"eventName\">Event Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"eventName\"\r\n            name=\"eventName\"\r\n            value={formData.eventName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        {/* Add other form fields like college name, poster image (file input), cash prize, description, online/offline, website */}\r\n        {/* Example: */}\r\n        {/* College Name (Fixed) */}\r\n        <div className=\"form-group\">\r\n          <label>College Name:</label>\r\n          <p>{formData.collegeName}</p>\r\n        </div>\r\n        {/* Poster Image (File Input) */}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"posterImage\">Poster Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"posterImage\"\r\n            name=\"posterImage\"\r\n            onChange={handleImageChange}\r\n            accept=\"image/*\"\r\n            required\r\n          />\r\n        </div>\r\n        {/* ... Other form fields ... */}\r\n        <button type=\"submit\">Create Event</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEvent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}